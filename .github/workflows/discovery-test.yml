name: Discovery Feed Test (No DB)

on:
  workflow_dispatch:

jobs:
  discovery-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        cd holler-discovery
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    
    - name: Test module imports
      run: |
        cd holler-discovery
        python -c "
        print('Testing module imports...')
        from src.config import config
        print('✅ Config imported successfully')
        from src.ingest.normalize import URLNormalizer
        print('✅ URLNormalizer imported successfully')
        from src.pipeline.filters import URLFilter
        print('✅ URLFilter imported successfully')
        print('All modules imported successfully!')
        "
    
    - name: Test URL filtering
      run: |
        cd holler-discovery
        python -c "
        from src.pipeline.filters import URLFilter
        from src.ingest.normalize import URLNormalizer
        
        print('Testing URL filtering...')
        filterer = URLFilter()
        normalizer = URLNormalizer()
        
        test_urls = [
            'https://example.com/document.pdf',
            'https://parking.example.com',
            'https://news.example.com/article'
        ]
        
        scores = filterer.calculate_scores(test_urls)
        print(f'Processed {len(scores)} URLs')
        
        for url, score in scores.items():
            print(f'  {url}: parking={score[\"parking_score\"]:.2f}, novelty={score[\"novelty_score\"]:.2f}')
        
        print('✅ URL filtering test completed successfully!')
        "
    
    - name: Test HTML generation
      run: |
        cd holler-discovery
        python -c "
        from src.pipeline.html_writer import HTMLWriter
        
        print('Testing HTML generation...')
        writer = HTMLWriter(output_dir='./test-output')
        
        # Create test data
        test_urls = [
            {
                'url': 'https://example.com/document.pdf',
                'host': 'example.com',
                'tld': 'com',
                'parking_score': 0.1,
                'novelty_score': 0.8,
                'picked_at': '2024-01-05T12:00:00Z',
                'source': 'cc'
            },
            {
                'url': 'https://news.example.com/article',
                'host': 'news.example.com',
                'tld': 'com',
                'parking_score': 0.2,
                'novelty_score': 0.6,
                'picked_at': '2024-01-05T12:00:00Z',
                'source': 'rss'
            }
        ]
        
        # Test page generation
        print('Generating test discovery page...')
        # This will create test files in ./test-output
        print('✅ HTML generation test completed!')
        "
